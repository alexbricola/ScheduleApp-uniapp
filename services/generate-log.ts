// 迁移 generate-log：保留逻辑
export interface LogEntry { id:number; user_id:number; date:string; content:string; tasks_done:number; tasks_total:number; schedules_done:number; schedules_total:number; created_at:string; }
export function generateDailyLog(userId:number, tasks:any[], schedules:any[]=[]): Promise<LogEntry>{ const tasksDone = tasks.filter(t=>t.status==='done').length; const tasksTotal = tasks.length; const schedulesDone = schedules.filter(s=>s.completed).length; const schedulesTotal = schedules.length; const content = buildContent(tasks, schedules, tasksDone, tasksTotal, schedulesDone, schedulesTotal); const today = new Date().toISOString().slice(0,10); return Promise.resolve({ id: Date.now(), user_id:userId, date:today, content, tasks_done:tasksDone, tasks_total:tasksTotal, schedules_done:schedulesDone, schedules_total:schedulesTotal, created_at:new Date().toISOString() }); }
function buildContent(tasks:any[], schedules:any[], tasksDone:number, tasksTotal:number, schedulesDone:number, schedulesTotal:number){ const totalDone = tasksDone + schedulesDone; const doneTasks = tasks.filter(t=>t.status==='done'); const doneSchedules = schedules.filter(s=>s.completed); if(totalDone===0) return '今天还没有完成任何任务或日程，加油吧！'; let text = '今天完成了：\n'; doneTasks.forEach(t=>{ text += `✓ ${t.title}\n`; }); doneSchedules.forEach(s=>{ text += `✓ ${s.title}\n`; }); const encouragements = ['很棒！继续保持！','做得好！明天也要加油！','真不错！你正在稳步前进！','太棒了！每一步都很重要！','优秀！坚持就是胜利！']; text += '\n' + encouragements[Math.floor(Math.random()*encouragements.length)]; return text; }